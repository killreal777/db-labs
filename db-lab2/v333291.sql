-- 1
-- Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
-- Таблицы: Н_ЛЮДИ, Н_ВЕДОМОСТИ.
-- Вывести атрибуты: Н_ЛЮДИ.ИМЯ, Н_ВЕДОМОСТИ.ИД.
-- Фильтры (AND):
-- a) Н_ЛЮДИ.ФАМИЛИЯ > Иванов.
-- b) Н_ВЕДОМОСТИ.ЧЛВК_ИД < 153285.
-- c) Н_ВЕДОМОСТИ.ЧЛВК_ИД > 142390.
-- Вид соединения: INNER JOIN.

select
    люди."ИМЯ",
    люди."ФАМИЛИЯ",
    ведомости."ИД"
from "Н_ЛЮДИ" люди
    join "Н_ВЕДОМОСТИ" ведомости on (люди."ИД" = ведомости."ЧЛВК_ИД")
where
    люди."ФАМИЛИЯ" > 'Иванов' and
    ведомости."ЧЛВК_ИД" < 153285 and
    ведомости."ЧЛВК_ИД" > 142390;


-- 2
-- Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
-- Таблицы: Н_ЛЮДИ, Н_ВЕДОМОСТИ, Н_СЕССИЯ.
-- Вывести атрибуты: Н_ЛЮДИ.ФАМИЛИЯ, Н_ВЕДОМОСТИ.ДАТА, Н_СЕССИЯ.ИД.
-- Фильтры (AND):
-- a) Н_ЛЮДИ.ИМЯ < Николай.
-- b) Н_ВЕДОМОСТИ.ДАТА > 2022-06-08.
-- Вид соединения: LEFT JOIN.

select
    люди."ФАМИЛИЯ",
    ведомости."ДАТА",
    сессия."ИД"
from "Н_ЛЮДИ" люди
    left join "Н_ВЕДОМОСТИ" ведомости on (люди."ИД" = ведомости."ЧЛВК_ИД")
        left join "Н_СЕССИЯ" сессия on (ведомости."ЧЛВК_ИД" = сессия."ЧЛВК_ИД")
where
    люди."ИМЯ" < 'Николай' and
    ведомости."ДАТА" > to_date('2022-06-08', 'YYYY-MM-DD');


-- 3
-- Вывести число студентов ФКТИУ, которые не имеет отчества.
-- Ответ должен содержать только одно число.

select count(*)
from "Н_ЛЮДИ" люди
    join "Н_ОБУЧЕНИЯ" обучения on (люди."ИД" = обучения."ЧЛВК_ИД")
        join "Н_УЧЕНИКИ" ученики on (обучения."ЧЛВК_ИД" = ученики."ЧЛВК_ИД")
            join "Н_ПЛАНЫ" планы on (ученики."ПЛАН_ИД" = планы."ИД")
                join "Н_ОТДЕЛЫ" отделы on (планы."ОТД_ИД" = отделы."ИД")
where
    люди."ОТЧЕСТВО" is null and
    upper(отделы."КОРОТКОЕ_ИМЯ") = 'КТИУ';


-- 4
-- В таблице Н_ГРУППЫ_ПЛАНОВ найти номера планов, по которым обучается (обучалось) ровно 2 групп на заочной форме обучения.
-- Для реализации использовать подзапрос.

select "ПЛАН_ИД" from "Н_ГРУППЫ_ПЛАНОВ"
group by "ПЛАН_ИД"
having
    count(*) = 2 and
    "ПЛАН_ИД" in
    (
        select планы."ИД" from "Н_ПЛАНЫ" планы
            join "Н_ФОРМЫ_ОБУЧЕНИЯ" формы on (планы."ФО_ИД" = формы."ИД")
        where формы."НАИМЕНОВАНИЕ" = 'Очная'
    );


-- 5
-- Выведите таблицу со средним возрастом студентов во всех группах (Группа, Средний возраст),
-- где средний возраст равен среднему возрасту в группе 3100.

select
    ученики."ГРУППА" as ГРУППА,
    to_char(avg(
        case when люди."ДАТА_СМЕРТИ" < current_date
        then age(люди."ДАТА_СМЕРТИ", люди."ДАТА_РОЖДЕНИЯ")
        else age(current_date, люди."ДАТА_РОЖДЕНИЯ")
        end
    ), 'YY') as СР_ВОЗРАСТ
from "Н_УЧЕНИКИ" ученики
    join "Н_ЛЮДИ" люди on (ученики."ЧЛВК_ИД" = люди."ИД")
group by ученики."ГРУППА"
having
    to_char(avg(
        case when люди."ДАТА_СМЕРТИ" < current_date
        then age(люди."ДАТА_СМЕРТИ", люди."ДАТА_РОЖДЕНИЯ")
        else age(current_date, люди."ДАТА_РОЖДЕНИЯ")
        end
    ), 'YY') =
    (
        select
            to_char(avg(
            case when люди."ДАТА_СМЕРТИ" < current_date
            then age(люди."ДАТА_СМЕРТИ", люди."ДАТА_РОЖДЕНИЯ")
            else age(current_date, люди."ДАТА_РОЖДЕНИЯ")
            end
        ), 'YY')
        from "Н_УЧЕНИКИ" ученики
            join "Н_ЛЮДИ" люди on ((ученики."ЧЛВК_ИД" = люди."ИД") and (ученики."ГРУППА" = '3100'))
    );


-- 6
-- Получить список студентов, зачисленных ровно первого сентября 2012 года на первый курс заочной формы обучения.
-- В результат включить: номер группы, номер, фамилию, имя и отчество студента, номер и состояние пункта приказа;
-- Для реализации использовать подзапрос с EXISTS.

select
    ученики."ГРУППА",
    ученики."ИД",
    люди."ФАМИЛИЯ",
    люди."ИМЯ",
    люди."ОТЧЕСТВО",
    ученики."П_ПРКОК_ИД",
    ученики."СОСТОЯНИЕ"
from "Н_УЧЕНИКИ" ученики
    join "Н_ЛЮДИ" люди on (люди."ИД" = ученики."ЧЛВК_ИД")
where
    ученики."НАЧАЛО"::date = to_date('2012-09-01', 'YYYY-MM-DD') and
    exists(
        select 1
        from "Н_ПЛАНЫ" планы
            join "Н_ФОРМЫ_ОБУЧЕНИЯ" формы on (планы."ФО_ИД" = формы."ИД")
        where
            ученики."ПЛАН_ИД" = планы."ИД" and
            планы."КУРС" = 1 and
            lower(формы."НАИМЕНОВАНИЕ") = 'заочная'
    );


-- 7
-- Сформировать запрос для получения числа в СПбГУ ИТМО троечников

select
    ученики."ГРУППА",
    ученики."ИД" as "УЧ_ИД",
    люди."ИД" as "ЧЛВК_ИД",
    люди."ФАМИЛИЯ",
    люди."ИМЯ",
    люди."ОТЧЕСТВО"
from "Н_ЛЮДИ" люди
    join "Н_УЧЕНИКИ" ученики on (ученики."ЧЛВК_ИД" = люди."ИД")
where exists(
    select 1 from "Н_ВЕДОМОСТИ" ведомости
    where
        люди."ИД" = ведомости."ЧЛВК_ИД" and
        ведомости."ОЦЕНКА" = '3'
);
